<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="flower.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABO9JREFUeF7t
        mzFuJUUURZ3NCgYWQQoiZjdEiCUQkE2EEBkZMTsgICdCSGwHfK13R3ee36uq/r/9f9t9j3Q1dtfrqv7n
        +s/YlubBmBfls/fv/4sPzT1BEUxcMveCRfz79z8u5N7kMrYU4vJ2RstYeXdwXhNL5looVMuoBPM6s1qe
        2QDl/vXHn61gzjCc6+bNhVAwytDwuoZruYxcCOfjU7MKxf3+y69PyWV8+P67p+T1WRk/fPvVU/S6WYDS
        KZzRMvJ6LgWzWXx1zUygtEq6Xq/WEb6TqneJ2UguQ6V3a1xnOOdCdqATjozWEC3EZewA5HXSR2sazl1S
        yJbZNw9FVpKR2ZqGZbCQLYnHMZBRyUYoq7vOaBFaBmb51xm/E9Pvxjgbj2IAxVXJaxSNVHJVst7XlcK9
        4lFMFpej65QHsb/99PMzuSuFaCmci0cxIIvLYQmcU7EqVyXjz2rffB/3jUcxoBKHUFa1rmJVMNPtme/B
        XDyGIVkeS+ikMlkug7/KRvdyjmfEYxhCeRSUBc6iZajoapbhTDyCUShnJnEWLaRaR/SsOP4TZuunAC++
        kndJKHO0Fsc+A2v89fypf0XfCdwaCh+txZEtnFuZfXPwhX/x5buPEiqZq9H7ud8s8SgGQAjKYChpJJTC
        c6pZ/HuiPzzqD43+gVCgMC1DC2FWxSPVLP+RdyEDKPDrb949JZfBmUows/LdFMK5rhSed1oonWUwvB5j
        00IQLWU0n0vRMvTM00EBszIArzErokfzOqezcdw5gYBcBguJkWdQHJIlV6L1q7+aQ7hfHHFOKKEqY1UO
        Z/dIbHleICGXwUJixNwKflVWZbiQO1CVwUJixNwSF3IwXMiBgPSqEF6PMXMrqjJYSIyYW+JCDkZVCK65
        kDvRFRLL5ta4kIPhQg6GCzkYLuRguJCD4UIOhgs5GEcqxF8IjxylEJzpQh7pCrmlHD6DC3mkKuRWcnCG
        nu9CgqqUl5aTy7jFma+GexVy6zNfDZWclxRUnffjh89dCIGIStJLCOrKcCGJrpA9JXG/fI4LKahEIXtJ
        6spAXEhBJ2wvSV0ZiAtp6Aq5VlS1L/4DED9GGfjThSQqcdeKwr2zQhgXUrB3KV0ZLmSRPQvBPS5kByqJ
        lxaS90FcyEYg5tpSujKQUxVCmde+uEroln2r+5FTvjsoThNLy+CeLG1VXHcvctpC8otlYmSJvI/uFSMl
        1X1IVway9dleFZ0Qylx98Zzt9omxT6jmEZZxykJAFsOfhhlKnYnI++T7Y+wj3fyokG6vN0UWw98XMbo2
        E5L3QrBHdU81OyoDGZ39ZsCL7ERWpSC8Jwsa7aWz1QziQoJOEFIVosG9WXbej8VyLq8jszIQPedNkwXN
        xOTgfqbaD2EhTF53IQmVpHJGgnJGwvVdktdXzsI98ajnIItSSSNRVSrpiJai12fncL941POQRaqoTtYo
        WfysEL2mOWUZJJeCaCkjcTl5n+r6bF8+TzzeOalEqriRQA1lVtf58Wgv3h+PdV46kYgWoqlmkbwXZvPn
        3f2Yi0cyWaSGEqtU89yHM/nz6j6XUTAqhVGpmjyHfbiWC6lm4xFMhqVQYhfKrYJ17oHPuZeuM1iLo80I
        ClV5VSi5yqgQ7h/HmRUojUJnoXCN3q/7xRHmElTqSrpSXMTOqNitiS2MMcYYY4wxxhhjdufh4X+s0/bA
        XZWlKAAAAABJRU5ErkJggg==
</value>
  </data>
</root>